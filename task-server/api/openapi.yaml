openapi: 3.0.0
info:
  description: Task managemeent securitySchemes
  title: Task API
  version: 1.0.0
servers:
- url: /
paths:
  /tasks/{taskId}:
    delete:
      operationId: tasksTaskIdDELETE
      parameters:
      - description: The unique identifier of the tasks
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          $ref: '#/components/schemas/taskId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: remove the task
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No tasks found for the provided `tasksId`
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: remove the tasks if it has not has not remain executions
      x-eov-operation-handler: controllers/DefaultController
    get:
      operationId: tasksTaskIdGET
      parameters:
      - description: The unique identifier of the tasks
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          $ref: '#/components/schemas/taskId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: The tasks corresponding to the provided `tasksId`
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No tasks found for the provided `tasksId`
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Read a task
      x-eov-operation-handler: controllers/DefaultController
    put:
      operationId: tasksTaskIdPUT
      parameters:
      - description: The unique identifier of the tasks
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          $ref: '#/components/schemas/taskId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: the task was udpated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No tasks found for the provided `tasksId`
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: update the tasks if it has not has not remain executions
      x-eov-operation-handler: controllers/DefaultController
  /tasks:
    get:
      description: Adds a new task
      operationId: getTasks
      parameters:
      - description: the max number of tasks to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The number of tasks to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskPage'
          description: paginated list of task
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: create a task
      x-eov-operation-handler: controllers/DefaultController
    post:
      operationId: tasksPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: The task was created successfully
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      x-eov-operation-handler: controllers/DefaultController
components:
  schemas:
    taskId:
      description: The unique identifier of a tasks
      type: string
    Task:
      example:
        name: name
        id: id
        state: pending
      properties:
        id:
          description: The unique identifier of a tasks
          type: string
        name:
          type: string
        state:
          enum:
          - pending
          - running
          - failed
          - completed
          type: string
      required:
      - id
      - name
      - type
      type: object
    Once:
      properties:
        executionTime:
          type: number
      type: object
    Recurring:
      type: string
    TaskPage:
      example:
        offset: 6
        limit: 0
        count: 1
        tasks:
        - name: name
          id: id
          state: pending
        - name: name
          id: id
          state: pending
      properties:
        limit:
          type: integer
        offset:
          type: integer
        count:
          type: integer
        tasks:
          items:
            $ref: '#/components/schemas/Task'
          type: array
      type: object
    CreateTaskInput:
      example:
        schedule: schedule
        scheduleType: single
        name: name
      properties:
        name:
          type: string
        scheduleType:
          enum:
          - single
          - recurring
          type: string
        schedule:
          type: string
      required:
      - name
      - scheduleType
      type: object
    UpdateTaskInput:
      example:
        schedule: schedule
        scheduleType: single
        name: name
        taskId: taskId
      properties:
        taskId:
          description: The unique identifier of a tasks
          type: string
        name:
          type: string
        scheduleType:
          enum:
          - single
          - recurring
          type: string
        schedule:
          type: string
      required:
      - id
      - name
      - scheduleType
      type: object
    Error:
      example:
        message: message
      properties:
        message:
          description: A human readable error message
          type: string
      required:
      - message
      type: object
